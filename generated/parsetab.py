
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2E6180939D9388C4833E31478CA02687'
    
_lr_action_items = {'IDENTIFIER':([0,4,7,8,9,13,14,18,19,22,],[1,10,10,10,10,10,1,10,10,1,]),'$end':([2,3,5,6,10,11,12,16,17,21,23,24,25,27,],[-3,-4,0,-1,-10,-9,-5,-13,-12,-2,-7,-8,-11,-6,]),';':([2,3,6,10,11,12,16,17,23,24,25,27,],[-3,-4,14,-10,-9,-5,-13,-12,-7,-8,-11,-6,]),'NUMBER':([4,7,8,9,13,18,19,],[11,11,11,11,11,11,11,]),')':([10,11,17,20,23,24,25,],[-10,-9,-12,25,-7,-8,-11,]),'=':([1,],[8,]),'{':([10,11,15,17,23,24,25,],[-10,-9,22,-12,-7,-8,-11,]),'PRINT':([0,14,22,],[4,4,4,]),'ADD_OP':([4,7,8,9,10,11,12,13,15,16,17,18,19,20,23,24,25,],[9,9,9,9,-10,-9,18,9,18,18,-12,9,9,18,-7,-8,-11,]),'MUL_OP':([10,11,12,15,16,17,20,23,24,25,],[-10,-9,19,19,19,-12,19,19,-8,-11,]),'}':([2,3,6,10,11,12,16,17,21,23,24,25,26,27,],[-3,-4,-1,-10,-9,-5,-13,-12,-2,-7,-8,-11,27,-6,]),'(':([4,7,8,9,13,18,19,],[13,13,13,13,13,13,13,]),'WHILE':([0,14,22,],[7,7,7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,14,22,],[6,6,6,]),'programme':([0,14,22,],[5,21,26,]),'assignation':([0,14,22,],[2,2,2,]),'expression':([4,7,8,9,13,18,19,],[12,15,16,17,20,23,24,]),'structure':([0,14,22,],[3,3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser5.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser5.py',13),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',17),
  ('statement -> structure','statement',1,'p_statement','parser5.py',18),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',22),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parser5.py',26),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',30),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',31),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',35),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',36),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',40),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',44),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',48),
]
